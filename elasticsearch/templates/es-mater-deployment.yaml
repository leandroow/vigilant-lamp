apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.master.name }}
  labels:
    {{- range $k, $v := .Values.master.selector }}
      {{ $k }}: {{ $v }}
    {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
    {{- range $k, $v := .Values.master.selector }}
      {{ $k }}: {{ $v }}
    {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
      {{- range $k, $v := .Values.master.selector }}
        {{ $k }}: {{ $v }}
      {{- end }}
    spec:
      initContainers:
      - name: init-sysctl
        image: busybox:1.27.2
        command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        securityContext:
          privileged: true
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "elasticsearch.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            privileged: true
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: PROCESSORS
            valueFrom:
              resourceFieldRef:
                resource: limits.cpu
          {{- range $k, $v := .Values.master.env }}
          - name: {{ $k }}
            value: {{ $v }}
          {{- end }}
          ports:
            - name: {{ .Values.master.container.name }}
              containerPort: {{ .Values.master.container.port }}
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: storage
            mountPath: /data
          - name: config
            mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
            subPath: elasticsearch.yml
      
      volumes:
          - name: storage
            persistentVolumeClaim:
              claimName: storage-master 
          - name: config
            configMap:
              name: {{ .Values.master.name }}-config
      
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
